"use client"

import Image from "next/image";
import { useState, useEffect } from "react";
import { useWallet, useConnection } from '@solana/wallet-adapter-react';
import { LAMPORTS_PER_SOL } from '@solana/web3.js';
import { motion } from "framer-motion";
import VantaBackground from "@/components/VantaBackground";
import { WalletButton } from "@/components/WalletButton";
import { DepositForm } from "@/components/DepositForm";
import { ScrollReveal } from "@/components/ScrollReveal";

const journey = [
  {
    title: "Discover TinyPay",
    description:
      "Experience how crypto can finally be used like real money — instant, portable, and made for real-world payments.",
  },
  {
    title: "Get Ready to Pay",
    description:
      "Install the TinyPay app and generate secure One-Time Payment codes (OTPs). Your balance is stored safely on-chain.",
  },
  {
    title: "Pay Instantly, Even Offline",
    description:
      "Show your TinyPay code to the merchant. The merchant verifies it locally — no network, no signature, just tap and go.",
  },
  {
    title: "Settle Trustlessly",
    description:
      "Once the merchant comes back online, transactions are automatically verified and settled on Solana. Every payment is final, secure, and interoperable by design.",
  },
];

const keyFeatures = [
  {
    title: "No Signature Required",
    description: "Users don't need to worry about network security or malicious transaction content. Pay with confidence without signing every transaction.",
    icon: "shield"
  },
  {
    title: "Offline Payments",
    description: "Make payments even without internet connection. TinyPay works anywhere, anytime.",
    icon: "offline"
  },
  {
    title: "Save to Earn",
    description: "Your deposited funds automatically earn yield through DeFi protocols. Your money grows while you spend.",
    icon: "savings"
  }
];

const businessModels = [
  {
    title: "DeFi Save to Earn",
    description: "User funds deposited in the contract automatically generate yield through DeFi protocols. We earn revenue by taking a percentage of the interest generated.",
    icon: "chart"
  },
  {
    title: "Custom Hardware",
    description: "Upgrade from mobile app payments to dedicated POS scanning machines for merchants, providing a more professional checkout experience.",
    icon: "hardware"
  },
  {
    title: "Value-Added Services",
    description: "We provide premium services including inventory management and data analytics to help merchants grow their business.",
    icon: "services"
  }
];

const faqs = [
  {
    question: "How does TinyPay work without internet?",
    answer:
      "Payers pre-load funds on-chain, then generate OTPs which is a hash-chain generated by a user defined root. Each OTP approves one payment, once the OTP consumed and the contract will ready for next OTP.",
  },
  {
    question: "Which assets can I use?",
    answer:
      "U2U (native token), USDC, USDT, and any ERC20 token are supported today. Additional tokens are just a configuration away.",
  },
  {
    question: "Is the system non-custodial?",
    answer:
      "Yes. Funds never leave the smart contract you control. OTPs simply authorize release to a merchant.",
  },
  {
    question: "Do merchants need special hardware?",
    answer:
      "No. The TinyPayCheckout iOS app handles QR scanning, OTP entry, and syncing. Dedicated POS hardware is on our roadmap.",
  },
];

const SECTION_HEIGHT = "flex min-h-[calc(100vh-84px)] flex-col justify-center py-16";
const FIRST_SECTION_HEIGHT = "flex min-h-screen flex-col justify-start py-4 lg:py-16";
const LAST_SECTION_HEIGHT = "flex min-h-[calc(100vh-84px-8rem)] flex-col justify-center py-16";

export default function Home() {
  const { publicKey, connected } = useWallet();
  const { connection } = useConnection();
  const [balance, setBalance] = useState<number>(0);
  const [isNavVisible, setIsNavVisible] = useState(true);
  const [lastScrollY, setLastScrollY] = useState(0);

  // Fetch balance
  useEffect(() => {
    if (publicKey && connection) {
      connection.getBalance(publicKey).then(bal => {
        setBalance(bal / LAMPORTS_PER_SOL);
      }).catch(err => {
        console.error('Failed to get balance:', err);
      });
    }
  }, [publicKey, connection]);

  // Monitor scroll direction
  useEffect(() => {
    const handleScroll = () => {
      const currentScrollY = window.scrollY;

      // Show nav when at top
      if (currentScrollY < 10) {
        setIsNavVisible(true);
      }
      // Hide when scrolling down, show when scrolling up
      else if (currentScrollY > lastScrollY) {
        setIsNavVisible(false);
      } else {
        setIsNavVisible(true);
      }

      setLastScrollY(currentScrollY);
    };

    window.addEventListener('scroll', handleScroll, { passive: true });
    return () => window.removeEventListener('scroll', handleScroll);
  }, [lastScrollY]);

  return (
    <div className="relative bg-[#f5f7fb] text-slate-900">
      <VantaBackground />
      <div className="absolute top-[100vh] left-0 right-0 bottom-0 bg-[#f5f7fb] z-[1]">
        <div className="absolute inset-0 w-full h-full overflow-hidden">
          <div className="absolute top-0 left-0 w-[150vw] h-[100vh] bg-gradient-to-br from-[#6B9EF5]/15 via-transparent to-transparent blur-[120px]" />
          <div className="absolute top-[50vh] right-0 w-[150vw] h-[100vh] bg-gradient-to-bl from-[#F2B92C]/12 via-transparent to-transparent blur-[120px]" />
          <div className="absolute top-[100vh] left-0 w-[150vw] h-[100vh] bg-gradient-to-tr from-[#6B9EF5]/10 via-transparent to-[#F2B92C]/8 blur-[120px]" />
        </div>
      </div>
      <header className={`sticky top-0 z-50 transition-transform duration-300 bg-transparent ${
        isNavVisible ? 'translate-y-0' : '-translate-y-full'
      }`}>
        <div className="flex items-center justify-between px-4 py-3 lg:px-6 lg:py-5">
          <div className="flex items-center gap-2 lg:gap-3">
            <div className="relative h-9 w-9 lg:h-11 lg:w-11 overflow-hidden rounded-[14px] lg:rounded-[18px] border border-white/60 bg-white shadow-lg shadow-[#6B9EF5]/20">
              <Image src="/images/logo2.jpg" alt="TinyPay logo" fill className="object-cover" />
            </div>
            <span className="text-xl lg:text-2xl font-semibold tracking-tight">
              Tiny<span className="italic">Pay</span>
            </span>
          </div>
          <div className="flex items-center gap-1.5 lg:gap-2">
            <a
              href="https://youtu.be/E59_zBE-Mao"
              target="_blank"
              rel="noopener noreferrer"
              className="inline-flex items-center justify-center w-8 h-8 lg:w-10 lg:h-10 rounded-full bg-gradient-to-r from-[#F2B92C]/25 via-[#F2B92C]/20 to-[#6B9EF5]/20 backdrop-blur-xl border border-[#F2B92C]/40 text-slate-800 shadow-md shadow-[#F2B92C]/20 hover:shadow-lg hover:shadow-[#F2B92C]/30 transition-all"
              aria-label="Watch Demo"
            >
              <svg className="w-4 h-4 lg:w-5 lg:h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z" />
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
            </a>
            <a
              href="https://github.com/TrustPipe/TinyPayContract-Solana"
              target="_blank"
              rel="noopener noreferrer"
              className="inline-flex items-center justify-center w-8 h-8 lg:w-10 lg:h-10 rounded-full bg-gradient-to-r from-[#F2B92C]/25 via-[#F2B92C]/20 to-[#6B9EF5]/20 backdrop-blur-xl border border-[#F2B92C]/40 text-slate-800 shadow-md shadow-[#F2B92C]/20 hover:shadow-lg hover:shadow-[#F2B92C]/30 transition-all"
              aria-label="View Contract on GitHub"
            >
              <svg className="w-4 h-4 lg:w-5 lg:h-5" fill="currentColor" viewBox="0 0 24 24">
                <path fillRule="evenodd" d="M12 2C6.477 2 2 6.484 2 12.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0112 6.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.202 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.943.359.309.678.92.678 1.855 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0022 12.017C22 6.484 17.522 2 12 2z" clipRule="evenodd" />
              </svg>
            </a>
            <WalletButton />
          </div>
        </div>
      </header>

      <main className="relative z-10 mx-auto max-w-7xl px-4 lg:px-6">
        <section className={FIRST_SECTION_HEIGHT}>
          <div className="grid gap-6 lg:gap-16 lg:grid-cols-[1.2fr_0.8fr] lg:items-start mt-0 lg:mt-8">
            <div className="space-y-3 lg:space-y-12">
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.6, delay: 0.2 }}
                className="inline-flex items-center gap-1.5 lg:gap-2 rounded-full bg-gradient-to-r from-[#F2B92C]/25 via-[#F2B92C]/20 to-[#6B9EF5]/20 backdrop-blur-xl border border-[#F2B92C]/50 px-3 py-1.5 lg:px-5 lg:py-2.5 text-xs lg:text-sm font-semibold text-slate-800 shadow-lg shadow-[#F2B92C]/25 hover:shadow-xl hover:shadow-[#F2B92C]/35 transition-all"
              >
                <span className="relative flex h-2 w-2 lg:h-2.5 lg:w-2.5">
                  <span className="animate-ping absolute inline-flex h-full w-full rounded-full bg-[#F2B92C] opacity-75"></span>
                  <span className="relative inline-flex rounded-full h-2 w-2 lg:h-2.5 lg:w-2.5 bg-[#F2B92C]"></span>
                </span>
                World&apos;s first offline crypto payment
              </motion.div>
              <motion.h1
                initial={{ opacity: 0, y: 30 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.8, delay: 0.4 }}
                className="text-3xl font-semibold tracking-tight text-slate-900 md:text-7xl leading-tight md:leading-relaxed"
              >
                <span className="text-4xl md:text-8xl italic tracking-widest bg-gradient-to-r from-[#D3A86C] via-[#91C8CA] via-[#9FE0D1] to-[#D3A86C] bg-clip-text text-transparent">Pay</span> anywhere, even <span className="bg-gradient-to-r from-[#D3A86C] via-[#91C8CA] via-[#9FE0D1] to-[#D3A86C] bg-clip-text text-transparent">offline</span>, just <span className="bg-gradient-to-r from-[#D3A86C] via-[#91C8CA] via-[#9FE0D1] to-[#D3A86C] bg-clip-text text-transparent">one</span> scan.
              </motion.h1>
              <motion.p
                initial={{ opacity: 0, y: 30 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.8, delay: 0.6 }}
                className="max-w-3xl text-sm md:text-xl leading-relaxed text-slate-700"
              >
                TinyPay expands blockchain&apos;s usability from DeFi to daily life — enabling the first truly cash-like experience for digital value.
              </motion.p>
            </div>
            <motion.div
              initial={{ opacity: 0, x: 50 }}
              animate={{ opacity: 1, x: 0 }}
              transition={{ duration: 0.8, delay: 0.8 }}
              className="flex items-start justify-center lg:sticky lg:top-24 lg:self-start"
            >
              <div className="relative w-full max-w-lg space-y-3 lg:space-y-6 lg:max-h-[calc(100vh-12rem)] lg:overflow-y-auto lg:overscroll-contain lg:scrollbar-thin lg:scrollbar-thumb-[#91C8CA]/30 lg:scrollbar-track-transparent">
                {/* Card 1: Wallet Info */}
                <div className="rounded-2xl lg:rounded-[32px] border border-[#F2B92C]/30 bg-gradient-to-br from-[#F2B92C]/60 to-[#E8A91C]/70 backdrop-blur-xl p-4 lg:p-6 text-white shadow-lg shadow-[#F2B92C]/40">
                  {connected && publicKey ? (
                    <>
                      <div className="flex items-center justify-between mb-3 lg:mb-4">
                        <span className="text-base lg:text-lg font-semibold">Wallet Info</span>
                        <div className="flex items-center gap-2">
                          <span className="rounded-full bg-white/20 px-2 lg:px-3 py-0.5 lg:py-1 text-[10px] lg:text-xs font-medium">
                            Solana Devnet
                          </span>
                        </div>
                      </div>
                      <div className="space-y-2">
                        <div>
                          <p className="text-[10px] lg:text-xs opacity-75">Balance</p>
                          <p className="text-2xl lg:text-3xl font-bold">
                            {balance.toFixed(4)} <span className="text-lg lg:text-xl">SOL</span>
                          </p>
                        </div>
                        <div>
                          <p className="text-[10px] lg:text-xs opacity-75">Address</p>
                          <p className="text-xs lg:text-sm font-mono opacity-90">
                            {publicKey.toString().slice(0, 8)}...{publicKey.toString().slice(-6)}
                          </p>
                        </div>
                      </div>
                    </>
                  ) : (
                    <>
                      <div className="text-center py-3 lg:py-4">
                        <p className="text-lg lg:text-xl font-semibold mb-2 lg:mb-3">Connect Wallet</p>
                        <p className="text-xs lg:text-sm opacity-80 mb-3 lg:mb-4">Connect your wallet to start using TinyPay</p>
                        <div className="flex justify-center">
                          <WalletButton />
                        </div>
                      </div>
                    </>
                  )}
                </div>

                {/* Card 2: Deposit Form or Getting Started */}
                {connected ? (
                  <div className="rounded-2xl lg:rounded-[28px] border border-[#91C8CA]/30 bg-gradient-to-br from-[#9FE0D1]/12 via-white/95 to-[#D3A86C]/8 backdrop-blur-xl p-4 lg:p-6 shadow-xl shadow-[#91C8CA]/20">
                    <DepositForm />
                  </div>
                ) : (
                  <>
                    {/* Getting Started Card */}
                    <div className="rounded-2xl lg:rounded-[28px] border border-[#91C8CA]/30 bg-gradient-to-br from-white/95 via-[#9FE0D1]/8 to-white/90 backdrop-blur-xl p-4 lg:p-6 shadow-xl shadow-[#91C8CA]/20">
                      <h3 className="text-base lg:text-lg font-semibold text-slate-900 mb-3 lg:mb-4 flex items-center gap-2">
                        <svg className="w-4 h-4 lg:w-5 lg:h-5 text-[#91C8CA]" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M13 10V3L4 14h7v7l9-11h-7z" />
                        </svg>
                        Quick Start
                      </h3>
                      <div className="space-y-3 lg:space-y-4">
                        <div className="flex gap-2 lg:gap-3">
                          <div className="flex-shrink-0 w-6 h-6 lg:w-8 lg:h-8 rounded-full bg-gradient-to-br from-[#91C8CA] to-[#9FE0D1] flex items-center justify-center text-white text-xs lg:text-sm font-bold">
                            1
                          </div>
                          <div>
                            <p className="text-xs lg:text-sm font-semibold text-slate-800 mb-0.5 lg:mb-1">Connect Your Wallet</p>
                            <p className="text-[10px] lg:text-xs text-slate-600">Use Phantom or Solflare wallet to connect to Solana</p>
                          </div>
                        </div>
                        <div className="flex gap-2 lg:gap-3">
                          <div className="flex-shrink-0 w-6 h-6 lg:w-8 lg:h-8 rounded-full bg-gradient-to-br from-[#91C8CA] to-[#9FE0D1] flex items-center justify-center text-white text-xs lg:text-sm font-bold">
                            2
                          </div>
                          <div>
                            <p className="text-xs lg:text-sm font-semibold text-slate-800 mb-0.5 lg:mb-1">Deposit Funds</p>
                            <p className="text-[10px] lg:text-xs text-slate-600">Deposit SOL into TinyPay&apos;s smart contract</p>
                          </div>
                        </div>
                        <div className="flex gap-2 lg:gap-3">
                          <div className="flex-shrink-0 w-6 h-6 lg:w-8 lg:h-8 rounded-full bg-gradient-to-br from-[#91C8CA] to-[#9FE0D1] flex items-center justify-center text-white text-xs lg:text-sm font-bold">
                            3
                          </div>
                          <div>
                            <p className="text-xs lg:text-sm font-semibold text-slate-800 mb-0.5 lg:mb-1">Pay Offline</p>
                            <p className="text-[10px] lg:text-xs text-slate-600">Generate secure OTPs and make payments without internet</p>
                          </div>
                        </div>
                      </div>
                    </div>

                    {/* Network Info Card */}
                    <div className="rounded-2xl lg:rounded-[28px] border border-[#6B9EF5]/25 bg-gradient-to-br from-[#6B9EF5]/8 via-white/95 to-white/90 backdrop-blur-xl p-4 lg:p-6 shadow-xl shadow-[#6B9EF5]/15">
                      <h3 className="text-base lg:text-lg font-semibold text-slate-900 mb-3 lg:mb-4 flex items-center gap-2">
                        <svg className="w-4 h-4 lg:w-5 lg:h-5 text-[#6B9EF5]" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9" />
                        </svg>
                        Network Info
                      </h3>
                      <div className="space-y-2">
                        <div className="flex justify-between items-center">
                          <span className="text-[10px] lg:text-xs text-slate-600">Network</span>
                          <span className="text-xs lg:text-sm font-semibold text-slate-800">Solana Devnet</span>
                        </div>
                        <div className="flex justify-between items-center">
                          <span className="text-[10px] lg:text-xs text-slate-600">Program</span>
                          <a
                            href="https://explorer.solana.com/address/88oZkwPMg9iWjPTUqYJXkRE2JYmFEvRraC6vYTcH9CGH?cluster=devnet"
                            target="_blank"
                            rel="noopener noreferrer"
                            className="text-xs lg:text-sm font-mono text-[#6B9EF5] hover:underline"
                          >
                            88oZk...H9CGH
                          </a>
                        </div>
                        <div className="flex justify-between items-center">
                          <span className="text-[10px] lg:text-xs text-slate-600">RPC</span>
                          <span className="text-xs lg:text-sm font-semibold text-slate-800">Devnet</span>
                        </div>
                      </div>
                    </div>
                  </>
                )}
              </div>
            </motion.div>
          </div>
        </section>

        <section className={SECTION_HEIGHT}>
          <ScrollReveal>
            <div className="rounded-[48px] bg-gradient-to-br from-white/90 via-[#9FE0D1]/8 to-white/80 p-10 shadow-[0_40px_120px_-60px_rgba(145,200,202,0.4)]">
              <div className="mb-12 flex flex-col gap-4 md:flex-row md:items-end md:justify-between">
                <div>
                  <p className="text-sm font-semibold uppercase tracking-[0.2em] text-[#91C8CA]">User Journey</p>
                  <h2 className="mt-3 text-4xl font-semibold text-slate-900">We bring crypto back to the street.</h2>
                </div>
                <p className="max-w-lg text-base text-slate-600">
                  TinyPay rebuilds the missing bridge between crypto and everyday payments — enabling anyone to pay instantly and securely, even offline.
                </p>
              </div>
              <div className="space-y-6">
                {journey.map((step, index) => (
                  <ScrollReveal key={step.title} delay={index * 0.1}>
                    <div className="rounded-[32px] border border-[#9FE0D1]/20 bg-white/80 backdrop-blur-sm p-8 transition hover:-translate-y-1 hover:border-[#91C8CA]/50 hover:shadow-lg hover:shadow-[#91C8CA]/20">
                      <div className="flex items-start gap-6">
                        <div className="flex-shrink-0 w-12 h-12 rounded-full bg-gradient-to-br from-[#91C8CA] to-[#9FE0D1] flex items-center justify-center text-white text-xl font-bold shadow-lg shadow-[#91C8CA]/30">
                          {index + 1}
                        </div>
                        <div className="flex-1">
                          <h3 className="text-xl font-semibold text-slate-900 mb-2">{step.title}</h3>
                          <p className="text-base text-slate-600 leading-relaxed">{step.description}</p>
                        </div>
                      </div>
                    </div>
                  </ScrollReveal>
                ))}
              </div>
            </div>
          </ScrollReveal>
        </section>

        <section className={SECTION_HEIGHT}>
          <ScrollReveal>
            <div className="rounded-[48px] bg-gradient-to-br from-white/90 via-[#6B9EF5]/5 to-white/85 p-10 shadow-[0_40px_120px_-60px_rgba(107,158,245,0.3)]">
              <div className="mb-12 flex flex-col gap-4 md:flex-row md:items-end md:justify-between">
                <div>
                  <p className="text-sm font-semibold uppercase tracking-[0.2em] text-[#6B9EF5]">Key Features</p>
                  <h2 className="mt-3 text-4xl font-semibold text-slate-900">Built for real-world use</h2>
                </div>
                <p className="max-w-lg text-base text-slate-600">
                  TinyPay combines security, convenience, and yield — making crypto payments practical and profitable.
                </p>
              </div>
              <div className="grid gap-6 sm:grid-cols-3">
                {keyFeatures.map((feature, index) => (
                  <ScrollReveal key={feature.title} delay={index * 0.1}>
                    <div className="rounded-[32px] border border-[#6B9EF5]/20 bg-white/80 backdrop-blur-sm p-10 min-h-[320px] flex flex-col transition hover:-translate-y-1 hover:border-[#6B9EF5]/50 hover:shadow-lg hover:shadow-[#6B9EF5]/20">
                  <div className="mb-6 inline-flex h-14 w-14 items-center justify-center rounded-2xl bg-gradient-to-br from-[#6B9EF5]/20 to-[#6B9EF5]/10">
                    {feature.icon === 'shield' && (
                      <svg className="w-7 h-7 text-[#6B9EF5]" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z" />
                      </svg>
                    )}
                    {feature.icon === 'offline' && (
                      <svg className="w-7 h-7 text-[#6B9EF5]" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M8.111 16.404a5.5 5.5 0 017.778 0M12 20h.01m-7.08-7.071c3.904-3.905 10.236-3.905 14.141 0M1.394 9.393c5.857-5.857 15.355-5.857 21.213 0" />
                      </svg>
                    )}
                    {feature.icon === 'savings' && (
                      <svg className="w-7 h-7 text-[#6B9EF5]" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                      </svg>
                    )}
                  </div>
                      <h3 className="text-xl font-semibold text-slate-900 mb-4">{feature.title}</h3>
                      <p className="text-base text-slate-600 leading-relaxed">{feature.description}</p>
                    </div>
                  </ScrollReveal>
                ))}
              </div>
            </div>
          </ScrollReveal>
        </section>

        <section className={SECTION_HEIGHT}>
          <ScrollReveal>
            <div className="rounded-[48px] bg-gradient-to-br from-white/90 via-[#D3A86C]/8 to-white/85 p-10 shadow-[0_40px_120px_-60px_rgba(211,168,108,0.35)]">
              <div className="mb-12 flex flex-col gap-4 md:flex-row md:items-end md:justify-between">
                <div>
                  <p className="text-sm font-semibold uppercase tracking-[0.2em] text-[#D3A86C]">Business Model</p>
                  <h2 className="mt-3 text-4xl font-semibold text-slate-900">Sustainable revenue streams</h2>
                </div>
                <p className="max-w-lg text-base text-slate-600">
                  TinyPay creates value through DeFi yields, hardware solutions, and premium services for merchants.
                </p>
              </div>
              <div className="grid gap-6 sm:grid-cols-3">
                {businessModels.map((model, index) => (
                  <ScrollReveal key={model.title} delay={index * 0.1}>
                    <div className="rounded-[32px] border border-[#D3A86C]/20 bg-white/80 backdrop-blur-sm p-10 min-h-[320px] flex flex-col transition hover:-translate-y-1 hover:border-[#D3A86C]/50 hover:shadow-lg hover:shadow-[#D3A86C]/20">
                  <div className="mb-6 inline-flex h-14 w-14 items-center justify-center rounded-2xl bg-gradient-to-br from-[#D3A86C]/20 to-[#D3A86C]/10">
                    {model.icon === 'chart' && (
                      <svg className="w-7 h-7 text-[#D3A86C]" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M7 12l3-3 3 3 4-4M8 21l4-4 4 4M3 4h18M4 4h16v12a1 1 0 01-1 1H5a1 1 0 01-1-1V4z" />
                      </svg>
                    )}
                    {model.icon === 'hardware' && (
                      <svg className="w-7 h-7 text-[#D3A86C]" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z" />
                      </svg>
                    )}
                    {model.icon === 'services' && (
                      <svg className="w-7 h-7 text-[#D3A86C]" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z" />
                      </svg>
                    )}
                  </div>
                      <h3 className="text-xl font-semibold text-slate-900 mb-4">{model.title}</h3>
                      <p className="text-base text-slate-600 leading-relaxed">{model.description}</p>
                    </div>
                  </ScrollReveal>
                ))}
              </div>
            </div>
          </ScrollReveal>
        </section>

        <section className={SECTION_HEIGHT}>
          <ScrollReveal>
            <div className="rounded-[48px] bg-gradient-to-r from-[#91C8CA]/12 via-white/95 to-[#D3A86C]/12 p-10 shadow-[0_40px_120px_-60px_rgba(145,200,202,0.35)]">
            <div className="flex flex-col gap-4 md:flex-row md:items-end md:justify-between">
              <div>
                <p className="text-sm font-semibold uppercase tracking-[0.2em] text-[#91C8CA]">Technical Architecture</p>
                <h2 className="mt-3 text-4xl font-semibold text-slate-900">Secure layers working together</h2>
              </div>
              <p className="max-w-xl text-base text-slate-600">
                A simple four-layer stack keeps offline payments trustworthy while ensuring merchants get paid fast the moment a connection comes back.
              </p>
            </div>
              <div className="mt-12">
                <Image
                  src="/images/arc.png"
                  alt="TinyPay Architecture Diagram"
                  width={1200}
                  height={800}
                  className="w-full h-auto rounded-[32px] shadow-lg shadow-[#91C8CA]/20"
                />
              </div>
            </div>
          </ScrollReveal>
        </section>

        <section className={SECTION_HEIGHT}>
          <ScrollReveal>
            <div className="rounded-[48px] bg-gradient-to-br from-white/90 via-[#9FE0D1]/5 to-white/85 p-10 shadow-[0_40px_120px_-60px_rgba(159,224,209,0.3)]">
              <div className="mb-10 flex flex-col gap-4 md:flex-row md:items-end md:justify-between">
                <div>
                  <p className="text-sm font-semibold uppercase tracking-[0.2em] text-[#91C8CA]">FAQ</p>
                  <h2 className="mt-3 text-4xl font-semibold text-slate-900">Answers before you ask</h2>
                </div>
                <p className="max-w-xl text-base text-slate-600">
                  Reach out if you need deeper technical docs or want to explore pilots. We are quick on replies.
                </p>
              </div>
              <div className="space-y-4">
                {faqs.map((item, index) => (
                  <ScrollReveal key={item.question} delay={index * 0.1}>
                    <details className="group rounded-[32px] border border-[#9FE0D1]/25 bg-white/80 backdrop-blur-sm p-6 transition hover:border-[#91C8CA]/50 hover:shadow-lg hover:shadow-[#91C8CA]/15">
                  <summary className="flex cursor-pointer list-none items-center justify-between gap-4 text-lg font-semibold text-slate-900">
                    {item.question}
                    <span className="text-sm font-normal text-[#91C8CA] transition group-open:rotate-45">+</span>
                  </summary>
                      <p className="mt-4 text-sm text-slate-600">{item.answer}</p>
                    </details>
                  </ScrollReveal>
                ))}
              </div>
            </div>
          </ScrollReveal>
        </section>

        <section className={`relative ${LAST_SECTION_HEIGHT}`}>
          <ScrollReveal>
          <div className="absolute left-1/2 -translate-x-1/2 w-screen top-0 bottom-0 -z-10 bg-gradient-to-br from-[#91C8CA]/25 via-[#9FE0D1]/15 to-[#D3A86C]/25 blur-3xl" />
          <div className="rounded-[48px] bg-gradient-to-br from-[#D3A86C] via-[#91C8CA] to-[#9FE0D1] p-[1px] shadow-[0_40px_120px_-60px_rgba(145,200,202,0.5)]">
            <div className="rounded-[46px] bg-white/95 p-16 text-center">
              <p className="text-sm font-semibold uppercase tracking-[0.3em] text-[#91C8CA]">Ready to deploy</p>
              <h2 className="mt-6 text-4xl font-semibold text-slate-900">Bring offline crypto payments to your checkout</h2>
              <p className="mx-auto mt-4 max-w-2xl text-base text-slate-600">
                Pilot TinyPay with your team and delight customers who want the speed of contactless with the flexibility of crypto. We will help you integrate in under a week.
              </p>
              <div className="mt-10 flex justify-center">
                <a
                  href="mailto:team@tinypay.xyz"
                  className="rounded-full bg-gradient-to-r from-[#91C8CA] via-[#9FE0D1] to-[#D3A86C] px-7 py-3 text-sm font-semibold text-white shadow-lg shadow-[#91C8CA]/40 transition hover:-translate-y-0.5 hover:shadow-xl hover:shadow-[#91C8CA]/50"
                >
                  Start a Pilot
                </a>
              </div>
              <div className="mt-12 pt-12 border-t border-slate-200/60">
                <p className="text-sm font-medium text-slate-600 mb-6">Scan to Download TestFlight</p>
                <div className="flex flex-col sm:flex-row items-center justify-center gap-8">
                  {/* Payer App QR Code */}
                  <div className="flex flex-col items-center">
                    <div className="inline-flex items-center justify-center p-4 bg-white rounded-2xl shadow-lg">
                      <Image
                        src="/images/qrcode.png"
                        alt="TinyPay Payer App QR Code"
                        width={128}
                        height={128}
                        className="w-32 h-32"
                      />
                    </div>
                    <p className="mt-3 text-xs font-semibold text-slate-700">Payer App</p>
                  </div>

                  {/* Merchant App QR Code */}
                  <div className="flex flex-col items-center">
                    <div className="inline-flex items-center justify-center p-4 bg-white rounded-2xl shadow-lg">
                      <Image
                        src="/images/qrcode-merchant.png"
                        alt="TinyPay Merchant App QR Code"
                        width={128}
                        height={128}
                        className="w-32 h-32"
                      />
                    </div>
                    <p className="mt-3 text-xs font-semibold text-slate-700">Merchant App</p>
                  </div>
                </div>
                <p className="mt-4 text-xs text-slate-500">Available for iOS</p>
                <p className="mt-2 text-xs text-slate-400 italic">Android and Solana Seeker version coming soon</p>
              </div>
            </div>
          </div>
          </ScrollReveal>
        </section>
      </main>

      <footer className="relative z-10 mt-16 py-8 text-center text-xs text-slate-400">
        <div className="flex items-center justify-center gap-6 flex-wrap">
          <span>© {new Date().getFullYear()} TinyPay</span>
          <span className="text-slate-300">·</span>
          <a href="/terms" className="hover:text-[#91C8CA] transition">Terms</a>
          <span className="text-slate-300">·</span>
          <a href="/privacy" className="hover:text-[#91C8CA] transition">Privacy</a>
        </div>
      </footer>
    </div>
  );
}
